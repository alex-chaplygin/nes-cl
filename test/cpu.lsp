(defun adc-imm (ac op res)
  (setf PC 0)
  (setf A ac)
  (mem:wrt PC #x69)
  (mem:wrt (+ PC 1) op)
  (assert (= (one-cmd) 2))
  (assert (= A res)))

(defun adc-zero (ac op res)
  (setf PC 0)
  (setf A ac)
  (mem:wrt PC #x65)
  (mem:wrt (+ PC 1) #x10)
  (mem:wrt #x10 op)
  (assert (= (one-cmd) 3))
  (assert (= A res)))

(defun adc-test (func)
  (|clear-carry|)
  (funcall func 0 10 10)
  (assert (= (|get-zero|) 0))
  (assert (= (|get-over|) 0))
  (funcall func 1 255 0)
  (assert (= (|get-zero|) 1))
  (funcall func 1 #xF0 #xF2)
  (assert (= (|get-neg|) 1))
  (assert (= (|get-carry|) 0))
  (funcall func 255 2 1)
  (assert (= (|get-carry|) 1))
  (funcall func 255 1 1)
  (assert (= (|get-over|) 1))
  (|clear-carry|)
  (funcall func 1 254 255)
  (funcall func 255 255 254)
  (|clear-carry|)
  (funcall func 0 0 0))

(adc-test #'adc-imm)
(adc-test #'adc-zero)
