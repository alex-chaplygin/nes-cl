(defparameter *screen-width* 256)
(defparameter *screen-height* 240)
(defparameter *size* (* *screen-width* *screen-height*))
(defparameter video-buffer (make-array *size* :initial-element #x1A))
(cffi:define-foreign-library video
    (t (:default "/tmp/video")))
(cffi:use-foreign-library video)
(cffi:defcfun "video_init" :void (scale :int))
(cffi:defcfun "video_update" :void (buf :pointer))
(cffi:defcfun "video_close" :void)
(cffi:defcfun "video_get_events" :int)
(cffi:defcfun "video_sleep" :int (del :long))

(video-init 2)
(setf q 1)
(loop while (= q 1)
      do (setf q (video-get-events))
	 (let ((fr (ppu:get-frame)))
	   (cffi:with-foreign-object (buf :unsigned-char (* 256 240))
	     (dotimes (i *size*)
	       (setf (cffi:mem-aref buf :unsigned-char i) (svref fr i)))
	     (video-update buf)))
	 (video-sleep 20))
(video-close)
(cffi:close-foreign-library 'video)
